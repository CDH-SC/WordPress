# This an example file that would be located within the /etc/nginx/sites-enabled directory.
# It utilizes a reverse proxy to talk to container located on port 8010 
# (port number was chosen to be the number of projects/container) IE container number 10
# This is how we can host and manage N number of dockerized instances on one machine
# 
# The ssl certification is managed and generated by certbot
#

upstream site10 {
        # this is defined in the docker-compose yaml file
        server 127.0.0.1:8010;
        # machine:container
}

server {
    server_name site10.wordpress.cdhsc.org;

        location / {
              proxy_set_header        Host $host;
              proxy_set_header        X-Real-IP $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header        X-Forwarded-Proto $scheme;

              # Fix the â€œIt appears that your reverse proxy set up is broken" error.
              proxy_pass          http://site10;
              proxy_read_timeout  90;
        }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/site1.wordpress.cdhsc.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/site1.wordpress.cdhsc.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}



server {
    if ($host = site10.wordpress.cdhsc.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name site10.wordpress.cdhsc.org;
    return 404; # managed by Certbot


}
